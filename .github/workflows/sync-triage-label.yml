---
name: Sync Triage Label with Project Status

on:
  schedule:
    - cron: '*/15 * * * *'
  workflow_dispatch:

permissions:
  issues: write
  contents: read

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PROJECT_TOKEN || secrets.GITHUB_TOKEN }}
          script: |-
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const issues = await github.paginate(
              github.rest.issues.listForRepo,
              { owner, repo, state: 'open', per_page: 100 }
            );
            for (const issue of issues) {
              if (issue.pull_request) continue;
              const query = `
                query($owner: String!, $repo: String!, $number: Int!) {
                  repository(owner: $owner, name: $repo) {
                    issue(number: $number) {
                      projectItems(first: 10) {
                        nodes {
                          fieldValueByName(name: "Status") {
                            ... on ProjectV2ItemFieldSingleSelectValue { name }
                          }
                        }
                      }
                    }
                  }
                }`;
              const variables = { owner, repo, number: issue.number };
              let projectItems;
              try {
                const result = await github.graphql(query, variables);
                projectItems = result.repository.issue.projectItems.nodes;
              } catch (e) {
                console.log(`Error fetching project data for  #${issue.number}: ${e.message}`);
                continue;
              }
              const hasTriageStatus = projectItems.some(
                (i) => i.fieldValueByName?.name === "Triage"
              );
              const hasTriageLabel = issue.labels.some(
                (l) => l.name === "triage"
              );
              if (hasTriageStatus && !hasTriageLabel) {
                await github.rest.issues.addLabels({
                  owner, repo, issue_number: issue.number, labels: ["triage"]
                });
                console.log(`#${issue.number}: Added triage label`);
              } else if (!hasTriageStatus && hasTriageLabel) {
                await github.rest.issues.removeLabel({
                  owner, repo, issue_number: issue.number, name: "triage"
                });
                console.log(`#${issue.number}: Removed triage label`);
              }
            }
            console.log("Sync completed.");
